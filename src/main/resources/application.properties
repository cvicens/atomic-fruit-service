# Enabling logging
quarkus.log.console.enable=true
quarkus.log.console.level=DEBUG

# Log level settings
quarkus.log.category."com.redhat.atomic".level=DEBUG

# custom properties
greetings.message = hello
atomic-fruit.welcome-message = ${WELCOME_MESSAGE:Welcome}

# configure your datasource
%che.quarkus.datasource.url = jdbc:postgresql://my-database.atomic-fruit:5432/my_data
%che.quarkus.hibernate-orm.database.generation = create
%che.quarkus.hibernate-orm.sql-load-script = import.sql

#%dev.quarkus.datasource.url = jdbc:postgresql://127.0.0.1:5432/my_data
%dev.quarkus.datasource.url=jdbc:h2:mem:myDB
%dev.quarkus.datasource.driver=org.h2.Driver
%dev.quarkus.datasource.username=username-default

quarkus.datasource.url = jdbc:postgresql://my-database.atomic-fruit:5432/my_data
quarkus.datasource.driver = org.postgresql.Driver
quarkus.hibernate-orm.dialect = org.hibernate.dialect.PostgreSQL95Dialect
quarkus.datasource.username = luke
quarkus.datasource.password = secret
quarkus.hibernate-orm.database.generation = create
quarkus.hibernate-orm.sql-load-script = import.sql

# drop and create the database at startup (use `update` to only update the schema)
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
# show sql statements in log
quarkus.hibernate-orm.log.sql = true

# OCI Image
quarkus.container-image.registry=quay.io
#quarkus.container-image.group=cvicensa #optional, default to the system user name
#quarkus.container-image.name=demo-app #optional, defaults to the application name
#quarkus.container-image.tag=1.0       #optional, defaults to the application version

# Choose your building extension
quarkus.container-image.builder=s2i

# Deployment
quarkus.kubernetes-client.trust-certs=true
quarkus.kubernetes-client.namespace=${PROJECT_NAME:atomic-fruit}
quarkus.kubernetes.deployment-target=openshift
quarkus.openshift.expose=true
quarkus.openshift.annotations."app.openshift.io/connects-to"=my-database
